package proyectofinal;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import Clases.SortingAlgorithms.*;
import Clases.Graph.Edge;
import Clases.Graph.Vertex;
import Clases.Graph.Grafo;
import Clases.Nodes.TreeNode;
import Clases.Lists.DoublyLinkedList;
import Clases.Lists.SimpleList;
import Clases.Lists.CircularList;
import Clases.Lists.CircularDoublyLinkedList;
import Clases.*;
import Clases.Lists.Auto;
import javax.swing.*;
import java.util.*;
import java.awt.image.BufferedImage;
import java.awt.*;
/**
 *
 * @author andre
 */

public class ProyectoFinal extends javax.swing.JFrame {
    Auto auto;
    Random random;
    MyStack<String> stringStack;
    Queue<String> cola;
    LinkedList<String> bicola;
    TreeMap<Integer, Queue<String>> colaPrioridad;
    Tree tree;
    TreeNode root;
    Grafo grafo;
    Stopwatch stopwatch;
    int[] array = { 9, 1, 8, 2, 7 };
    /**
     * Creates new form ProyectoFinal
     */
    public ProyectoFinal() {
        initComponents();
        random = new Random();
        auto = new Auto();
        stringStack = new MyStack<>();
        cola = new LinkedList<>();
        bicola = new LinkedList<>();
        colaPrioridad = new TreeMap<>();
        root = new TreeNode("Root");
        tree = new Tree(root);
        grafo = new Grafo();
        stopwatch = new Stopwatch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnSimpleList = new javax.swing.JButton();
        textField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        InputTextBox = new javax.swing.JTextField();
        PushButton = new javax.swing.JButton();
        PopButton = new javax.swing.JButton();
        PeekButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaStack = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQueue = new javax.swing.JTextField();
        txtDeque = new javax.swing.JTextField();
        txtPriorityQueue = new javax.swing.JTextField();
        btnEnqueue = new javax.swing.JButton();
        btnDequeue = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextAreaQueue = new javax.swing.JTextArea();
        btnEnqueueFirst = new javax.swing.JButton();
        btnEnqueueLast = new javax.swing.JButton();
        btnDequeueFirst = new javax.swing.JButton();
        btnDequeueLast = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TextAreaDeque = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        TextAreaPriorQueue = new javax.swing.JTextArea();
        btnEnqueuePrior = new javax.swing.JButton();
        btnDequeuePiror = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFather = new javax.swing.JTextField();
        txtNewNodeTree = new javax.swing.JTextField();
        btnAddTree = new javax.swing.JButton();
        btnDeleteTree = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtTree = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        txtVertex = new javax.swing.JTextField();
        txtOrigin = new javax.swing.JTextField();
        txtDestination = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnAddVertex = new javax.swing.JButton();
        btnAddEdge = new javax.swing.JButton();
        pictureBox1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        btnBubbleRandom = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtBubble = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        btnBinaryTree = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtBinaryTree = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        btnBucket = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtBucket = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        btnCocktail = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtCocktail = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        btnComb = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtComb = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        btnCounting = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtCounting = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        btnGnome = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtGnome = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        btnHeap = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        txtHeap = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        btnInsertion = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        txtInsertion = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        btnMerge = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        txtMerge = new javax.swing.JTextArea();
        jPanel17 = new javax.swing.JPanel();
        btnPigeon = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        txtPigeon = new javax.swing.JTextArea();
        jPanel18 = new javax.swing.JPanel();
        btnQuick = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        txtQuick = new javax.swing.JTextArea();
        jPanel19 = new javax.swing.JPanel();
        btnRadix = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        txtRadix = new javax.swing.JTextArea();
        jPanel20 = new javax.swing.JPanel();
        btnSelection = new javax.swing.JButton();
        jScrollPane20 = new javax.swing.JScrollPane();
        txtSelection = new javax.swing.JTextArea();
        jPanel21 = new javax.swing.JPanel();
        btnShell = new javax.swing.JButton();
        jScrollPane21 = new javax.swing.JScrollPane();
        txtShell = new javax.swing.JTextArea();
        jPanel22 = new javax.swing.JPanel();
        btnSmooth = new javax.swing.JButton();
        jScrollPane22 = new javax.swing.JScrollPane();
        txtSmooth = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto Final Java");

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        btnSimpleList.setText("SimpleList");
        btnSimpleList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpleListActionPerformed(evt);
            }
        });

        textArea2.setColumns(20);
        textArea2.setRows(5);
        jScrollPane1.setViewportView(textArea2);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("How many integers would you like to add?");

        button2.setText("Circular List");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setText("Doubly Linked List");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button4.setText("Circular Doubly Linked List");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnSimpleList, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(135, 135, 135)
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpleList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(98, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.addTab("Lists", jPanel1);

        jPanel2.setBackground(new java.awt.Color(102, 255, 204));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Data (STRING)");

        PushButton.setText("Push (Add)");
        PushButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PushButtonActionPerformed(evt);
            }
        });

        PopButton.setText("Pop (Delete)");
        PopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopButtonActionPerformed(evt);
            }
        });

        PeekButton.setText("Peek (Show Only)");
        PeekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeekButtonActionPerformed(evt);
            }
        });

        textAreaStack.setColumns(20);
        textAreaStack.setRows(5);
        jScrollPane2.setViewportView(textAreaStack);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addComponent(InputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PeekButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PushButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(InputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PushButton))
                .addGap(26, 26, 26)
                .addComponent(PopButton)
                .addGap(29, 29, 29)
                .addComponent(PeekButton)
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Stack", jPanel2);

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Queue");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Double Ended Queue");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Priority Queue");

        btnEnqueue.setText("Enqueue");
        btnEnqueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnqueueActionPerformed(evt);
            }
        });

        btnDequeue.setText("Dequeue");
        btnDequeue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDequeueActionPerformed(evt);
            }
        });

        TextAreaQueue.setColumns(20);
        TextAreaQueue.setRows(5);
        jScrollPane3.setViewportView(TextAreaQueue);

        btnEnqueueFirst.setText("Enqueue First");
        btnEnqueueFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnqueueFirstActionPerformed(evt);
            }
        });

        btnEnqueueLast.setText("Enqueue Last");
        btnEnqueueLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnqueueLastActionPerformed(evt);
            }
        });

        btnDequeueFirst.setText("Dequeue First");
        btnDequeueFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDequeueFirstActionPerformed(evt);
            }
        });

        btnDequeueLast.setText("Dequeue Last");
        btnDequeueLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDequeueLastActionPerformed(evt);
            }
        });

        TextAreaDeque.setColumns(20);
        TextAreaDeque.setRows(5);
        jScrollPane4.setViewportView(TextAreaDeque);

        TextAreaPriorQueue.setColumns(20);
        TextAreaPriorQueue.setRows(5);
        jScrollPane5.setViewportView(TextAreaPriorQueue);

        btnEnqueuePrior.setText("Enqueue");
        btnEnqueuePrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnqueuePriorActionPerformed(evt);
            }
        });

        btnDequeuePiror.setText("Dequeue");
        btnDequeuePiror.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDequeuePirorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtQueue)
                        .addGap(90, 90, 90))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(btnEnqueue)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDequeue)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtDeque, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(btnEnqueueLast)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDequeueLast))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(btnEnqueueFirst)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDequeueFirst))))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                            .addComponent(txtPriorityQueue)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(btnEnqueuePrior, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDequeuePiror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQueue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPriorityQueue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnqueue)
                    .addComponent(btnDequeue)
                    .addComponent(btnEnqueueFirst)
                    .addComponent(btnDequeueFirst)
                    .addComponent(btnEnqueuePrior)
                    .addComponent(btnDequeuePiror))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEnqueueLast)
                            .addComponent(btnDequeueLast))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Queue", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Father Node Name:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("New Node Name:");

        txtFather.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtNewNodeTree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnAddTree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddTree.setText("Add");
        btnAddTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTreeActionPerformed(evt);
            }
        });

        btnDeleteTree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteTree.setText("Delete");
        btnDeleteTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTreeActionPerformed(evt);
            }
        });

        jLabel8.setText("Write the name of the node you want to delete in the Father Node TextBox.");

        txtTree.setColumns(20);
        txtTree.setRows(5);
        jScrollPane6.setViewportView(txtTree);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFather)
                                .addComponent(txtNewNodeTree))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnAddTree)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteTree))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNewNodeTree, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddTree)
                    .addComponent(btnDeleteTree))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tree", jPanel4);

        jPanel5.setBackground(new java.awt.Color(153, 255, 255));

        txtVertex.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtOrigin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtOrigin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOriginActionPerformed(evt);
            }
        });

        txtDestination.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDestinationActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Origin");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Destination");

        btnAddVertex.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddVertex.setText("Add Vertex");
        btnAddVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVertexActionPerformed(evt);
            }
        });

        btnAddEdge.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddEdge.setText("Add Edge");
        btnAddEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEdgeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pictureBox1Layout = new javax.swing.GroupLayout(pictureBox1);
        pictureBox1.setLayout(pictureBox1Layout);
        pictureBox1Layout.setHorizontalGroup(
            pictureBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
        );
        pictureBox1Layout.setVerticalGroup(
            pictureBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddVertex)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(btnAddEdge)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(pictureBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVertex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddVertex))
                .addGap(51, 51, 51)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddEdge)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pictureBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Graph", jPanel5);

        jTabbedPane2.addTab("Data Structures", jTabbedPane1);

        jPanel7.setBackground(new java.awt.Color(153, 153, 255));

        btnBubbleRandom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBubbleRandom.setText("Show");
        btnBubbleRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBubbleRandomActionPerformed(evt);
            }
        });

        txtBubble.setColumns(20);
        txtBubble.setRows(5);
        jScrollPane7.setViewportView(txtBubble);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btnBubbleRandom)
                .addGap(69, 69, 69)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnBubbleRandom)
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Bubble Sort", jPanel7);

        jPanel8.setBackground(new java.awt.Color(153, 255, 153));

        btnBinaryTree.setText("Show");
        btnBinaryTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinaryTreeActionPerformed(evt);
            }
        });

        txtBinaryTree.setColumns(20);
        txtBinaryTree.setRows(5);
        jScrollPane8.setViewportView(txtBinaryTree);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(btnBinaryTree)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(btnBinaryTree)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Binary Tree", jPanel8);

        jPanel9.setBackground(new java.awt.Color(102, 255, 204));

        btnBucket.setText("Show");
        btnBucket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBucketActionPerformed(evt);
            }
        });

        txtBucket.setColumns(20);
        txtBucket.setRows(5);
        jScrollPane9.setViewportView(txtBucket);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnBucket)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnBucket)
                .addContainerGap(150, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Bucket Sort", jPanel9);

        jPanel10.setBackground(new java.awt.Color(0, 153, 153));

        btnCocktail.setText("Show");
        btnCocktail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCocktailActionPerformed(evt);
            }
        });

        txtCocktail.setColumns(20);
        txtCocktail.setRows(5);
        jScrollPane10.setViewportView(txtCocktail);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(btnCocktail)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(242, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(btnCocktail)
                .addContainerGap(149, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jScrollPane10)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Cocktail Sort", jPanel10);

        jPanel11.setBackground(new java.awt.Color(0, 153, 255));

        btnComb.setText("Show");
        btnComb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCombActionPerformed(evt);
            }
        });

        txtComb.setColumns(20);
        txtComb.setRows(5);
        jScrollPane11.setViewportView(txtComb);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(btnComb)
                .addGap(69, 69, 69)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btnComb)
                .addContainerGap(148, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane11)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Comb Sort", jPanel11);

        jPanel12.setBackground(new java.awt.Color(204, 0, 0));

        btnCounting.setText("Show");
        btnCounting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCountingActionPerformed(evt);
            }
        });

        txtCounting.setColumns(20);
        txtCounting.setRows(5);
        jScrollPane12.setViewportView(txtCounting);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(btnCounting)
                .addGap(56, 56, 56)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(btnCounting)
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Counting Sort", jPanel12);

        jPanel13.setBackground(new java.awt.Color(102, 51, 255));

        btnGnome.setText("Show");
        btnGnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGnomeActionPerformed(evt);
            }
        });

        txtGnome.setColumns(20);
        txtGnome.setRows(5);
        jScrollPane13.setViewportView(txtGnome);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(btnGnome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(273, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btnGnome)
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Gnome Sort", jPanel13);

        jPanel14.setBackground(new java.awt.Color(255, 255, 204));

        btnHeap.setText("Show");
        btnHeap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHeapActionPerformed(evt);
            }
        });

        txtHeap.setColumns(20);
        txtHeap.setRows(5);
        jScrollPane14.setViewportView(txtHeap);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(btnHeap)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(262, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnHeap)
                .addContainerGap(152, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane14)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Heap Sort", jPanel14);

        jPanel15.setBackground(new java.awt.Color(153, 153, 153));

        btnInsertion.setText("Show");
        btnInsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertionActionPerformed(evt);
            }
        });

        txtInsertion.setColumns(20);
        txtInsertion.setRows(5);
        jScrollPane15.setViewportView(txtInsertion);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnInsertion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(btnInsertion)
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane15)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Insertion Sort", jPanel15);

        jPanel16.setBackground(new java.awt.Color(0, 204, 204));

        btnMerge.setText("Show");
        btnMerge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMergeActionPerformed(evt);
            }
        });

        txtMerge.setColumns(20);
        txtMerge.setRows(5);
        jScrollPane16.setViewportView(txtMerge);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(btnMerge)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(297, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btnMerge)
                .addContainerGap(143, Short.MAX_VALUE))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jScrollPane16)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Merge Sort", jPanel16);

        jPanel17.setBackground(new java.awt.Color(0, 255, 51));

        btnPigeon.setText("Show");
        btnPigeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPigeonActionPerformed(evt);
            }
        });

        txtPigeon.setColumns(20);
        txtPigeon.setRows(5);
        jScrollPane17.setViewportView(txtPigeon);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(btnPigeon)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(btnPigeon)
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane17)
                .addContainerGap())
        );

        jTabbedPane3.addTab("PigeonHole", jPanel17);

        jPanel18.setBackground(new java.awt.Color(0, 102, 102));

        btnQuick.setText("Show");
        btnQuick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuickActionPerformed(evt);
            }
        });

        txtQuick.setColumns(20);
        txtQuick.setRows(5);
        jScrollPane18.setViewportView(txtQuick);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(btnQuick)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(231, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnQuick)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Quick Sort", jPanel18);

        jPanel19.setBackground(new java.awt.Color(0, 153, 153));

        btnRadix.setText("Show");
        btnRadix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRadixActionPerformed(evt);
            }
        });

        txtRadix.setColumns(20);
        txtRadix.setRows(5);
        jScrollPane19.setViewportView(txtRadix);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(btnRadix)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btnRadix)
                .addContainerGap(148, Short.MAX_VALUE))
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane19)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Radix Sort", jPanel19);

        jPanel20.setBackground(new java.awt.Color(204, 0, 0));

        btnSelection.setText("Show");
        btnSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectionActionPerformed(evt);
            }
        });

        txtSelection.setColumns(20);
        txtSelection.setRows(5);
        jScrollPane20.setViewportView(txtSelection);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(btnSelection)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnSelection)
                .addContainerGap(152, Short.MAX_VALUE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane20)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Selection Sort", jPanel20);

        jPanel21.setBackground(new java.awt.Color(255, 153, 153));

        btnShell.setText("Show");
        btnShell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShellActionPerformed(evt);
            }
        });

        txtShell.setColumns(20);
        txtShell.setRows(5);
        jScrollPane21.setViewportView(txtShell);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(btnShell)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(btnShell)
                .addContainerGap(151, Short.MAX_VALUE))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane21)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Shell Sort", jPanel21);

        jPanel22.setBackground(new java.awt.Color(0, 0, 204));

        btnSmooth.setText("Show");
        btnSmooth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSmoothActionPerformed(evt);
            }
        });

        txtSmooth.setColumns(20);
        txtSmooth.setRows(5);
        jScrollPane22.setViewportView(txtSmooth);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(btnSmooth)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(btnSmooth)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Smooth Sort", jPanel22);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Sorting Algorithms", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpleListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpleListActionPerformed
       SimpleList listaSimple = new SimpleList();
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                auto.autoAddSimpleList(listaSimple, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000); // Pausa en un hilo separado
                auto.autoDeleteSimpleList(listaSimple, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000);
                auto.autoSearchSimpleList(listaSimple, random, textArea2, Integer.parseInt(textField1.getText()));
                return null;
            }
        };

        worker.execute();
    }//GEN-LAST:event_btnSimpleListActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        CircularList listaciruclar = new CircularList();
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                auto.autoAddCircularList(listaciruclar, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000); // Pausa en un hilo separado
                auto.autoDeleteCircularList(listaciruclar, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000);
                auto.autoSearchCircularList(listaciruclar, random, textArea2, Integer.parseInt(textField1.getText()));
                return null;
            }
        };

        worker.execute();
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                auto.autoAddDoublyListLinked(doublyLinkedList, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000); // Pausa en un hilo separado
                auto.autoDeleteDoublyListLinked(doublyLinkedList, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000);
                auto.autoSearchDoublyListLinked(doublyLinkedList, random, textArea2, Integer.parseInt(textField1.getText()));
                return null;
            }
        };

        worker.execute();
    }//GEN-LAST:event_button3ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        CircularDoublyLinkedList doublyLinkedList = new CircularDoublyLinkedList();
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                auto.autoAddCircularDoublyLinkedList(doublyLinkedList, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000); // Pausa en un hilo separado
                auto.autoDeleteCircularDoublyLinkedList(doublyLinkedList, random, textArea2, Integer.parseInt(textField1.getText()));
                Thread.sleep(2000);
                auto.autoSearchCircularDoublyLinkedList(doublyLinkedList, random, textArea2, Integer.parseInt(textField1.getText()));
                return null;
            }
        };

        worker.execute();
    }//GEN-LAST:event_button4ActionPerformed

    private void updateTextArea() {
    // Limpiar el contenido actual del TextArea
    textAreaStack.setText("");

    // Recorrer la pila y agregar los elementos al TextArea
    for (int i = stringStack.count() - 1; i >= 0; i--) {
        String item = stringStack.get(i);
        // Agregar el elemento al TextArea
        textAreaStack.append(item + "\n");
    }
}
    
    private void PushButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PushButtonActionPerformed
        String item = InputTextBox.getText();
stringStack.push(item);
updateTextArea();
InputTextBox.setText("");
    }//GEN-LAST:event_PushButtonActionPerformed

    private void PopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopButtonActionPerformed
        try {
        String poppedItem = stringStack.pop();
        JOptionPane.showMessageDialog(null, "Elemento desapilado: " + poppedItem);
        updateTextArea();
    } catch (EmptyStackException e) {
        JOptionPane.showMessageDialog(null, "La pila está vacía. No se pueden desapilar elementos.");
    }
    }//GEN-LAST:event_PopButtonActionPerformed

    private void PeekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeekButtonActionPerformed
         try {
        String topItem = stringStack.peek();
        JOptionPane.showMessageDialog(null, "Elemento en la cima de la pila: " + topItem);
    } catch (EmptyStackException e) {
        JOptionPane.showMessageDialog(null, "La pila está vacía. No hay elementos para ver.");
    }
    }//GEN-LAST:event_PeekButtonActionPerformed

    private void actualizarListaCola() {
    // Mostrar la cola en el TextArea
    TextAreaQueue.setText("");

    for (String elemento : cola) {
        TextAreaQueue.append(elemento + "\n");
    }
}
    
    private void btnEnqueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnqueueActionPerformed
        // Agregar un elemento a la cola
    String elemento = txtQueue.getText();
    cola.offer(elemento);

    // Actualizar la lista de elementos en la cola
    actualizarListaCola();
    txtQueue.setText("");
    txtQueue.requestFocus();
    }//GEN-LAST:event_btnEnqueueActionPerformed

    private void btnDequeueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDequeueActionPerformed
        // Verificar si la cola no está vacía antes de intentar eliminar
    if (!cola.isEmpty()) {
        // Eliminar el elemento de la cola
        String elementoEliminado = cola.poll();

        // Mostrar un mensaje con el elemento eliminado
        JOptionPane.showMessageDialog(null, "Se eliminó el elemento: " + elementoEliminado);

        // Actualizar la lista de elementos en la cola
        actualizarListaCola();
    } else {
        JOptionPane.showMessageDialog(null, "La cola está vacía. No se pueden eliminar elementos.");
    }
    }//GEN-LAST:event_btnDequeueActionPerformed

    private void actualizarListaBicola() {
    // Mostrar la bicola en el JTextArea
    TextAreaDeque.setText("");
    for (String elemento : bicola) {
        TextAreaDeque.append(elemento + "\n");
    }
}
    
    private void btnEnqueueFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnqueueFirstActionPerformed
        // Agregar un elemento al inicio de la bicola
        String elemento = txtDeque.getText();
        bicola.addFirst(elemento);

        // Actualizar la lista de elementos en la bicola
        actualizarListaBicola();
        txtDeque.setText("");
        txtDeque.requestFocus();
    }//GEN-LAST:event_btnEnqueueFirstActionPerformed

    private void btnEnqueueLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnqueueLastActionPerformed
       // Agregar un elemento al final de la bicola
    String elemento = txtDeque.getText();
    bicola.addLast(elemento);
    // Actualizar la lista de elementos en la bicola
    actualizarListaBicola();
    txtDeque.setText("");
        txtDeque.requestFocus();
    }//GEN-LAST:event_btnEnqueueLastActionPerformed

    private void btnDequeueFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDequeueFirstActionPerformed
        // Verificar si la bicola no está vacía antes de intentar eliminar al inicio
    if (!bicola.isEmpty()) {
        // Eliminar el elemento al inicio de la bicola
        String elementoEliminado = bicola.removeFirst();

        // Mostrar un mensaje con el elemento eliminado
        JOptionPane.showMessageDialog(null, "Se eliminó el elemento al inicio: " + elementoEliminado);

        // Actualizar la lista de elementos en la bicola
        actualizarListaBicola();
    } else {
        JOptionPane.showMessageDialog(null, "La bicola está vacía. No se pueden eliminar elementos al inicio.");
    }
    }//GEN-LAST:event_btnDequeueFirstActionPerformed

    private void btnDequeueLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDequeueLastActionPerformed
        // Verificar si la bicola no está vacía antes de intentar eliminar al final
    if (!bicola.isEmpty()) {
        // Eliminar el elemento al final de la bicola
        String elementoEliminado = bicola.removeLast();

        // Mostrar un mensaje con el elemento eliminado
        JOptionPane.showMessageDialog(null, "Se eliminó el elemento al final: " + elementoEliminado);

        // Actualizar la lista de elementos en la bicola
        actualizarListaBicola();
    } else {
        JOptionPane.showMessageDialog(null, "La bicola está vacía. No se pueden eliminar elementos al final.");
    }
    }//GEN-LAST:event_btnDequeueLastActionPerformed

    private void btnEnqueuePriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnqueuePriorActionPerformed
        String elemento = txtPriorityQueue.getText();
    int prioridad;

    try {
        prioridad = Integer.parseInt(txtPriorityQueue.getText());

        if (!colaPrioridad.containsKey(prioridad)) {
            colaPrioridad.put(prioridad, new LinkedList<>());
        }

        colaPrioridad.get(prioridad).add(elemento);

        // Actualizar la lista de elementos en la cola de prioridad
        actualizarListaColaPrioridad();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Por favor, ingrese una prioridad válida (número entero).");
    }
    txtPriorityQueue.setText("");
    txtPriorityQueue.requestFocus();
    }//GEN-LAST:event_btnEnqueuePriorActionPerformed

    private void btnDequeuePirorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDequeuePirorActionPerformed
         // Verificar si la cola de prioridad no está vacía antes de intentar eliminar
    if (!colaPrioridad.isEmpty()) {
        // Encontrar la cola con la prioridad más baja
        int primeraCola = Collections.min(colaPrioridad.keySet());
        String elementoEliminado = colaPrioridad.get(primeraCola).poll();

        // Si la cola está vacía, eliminarla de la cola de prioridad
        if (colaPrioridad.get(primeraCola).isEmpty()) {
            colaPrioridad.remove(primeraCola);
        }

        // Mostrar un mensaje con el elemento eliminado
        JOptionPane.showMessageDialog(null, "Se eliminó el elemento: " + elementoEliminado);

        // Actualizar la lista de elementos en la cola de prioridad
        actualizarListaColaPrioridad();
    } else {
        JOptionPane.showMessageDialog(null, "La cola de prioridad está vacía. No se pueden eliminar elementos.");
    }
    }//GEN-LAST:event_btnDequeuePirorActionPerformed

private void actualizarListaColaPrioridad() {
    // Mostrar la cola de prioridad en el ListBox
    TextAreaPriorQueue.setText("");
    
    for (Map.Entry<Integer, Queue<String>> entry : colaPrioridad.entrySet()) {
        int prioridad = entry.getKey();
        Queue<String> elementos = entry.getValue();

        for (String elemento : elementos) {
            TextAreaPriorQueue.append(elemento + " - Prioridad: " + prioridad + "\n");
        }
    }
}

    private void btnAddTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTreeActionPerformed
        String parentNodeName = txtFather.getText();
    String newNodeName = txtNewNodeTree.getText();
    tree.addNode(parentNodeName, newNodeName, txtTree);
    }//GEN-LAST:event_btnAddTreeActionPerformed

    private void btnDeleteTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTreeActionPerformed
        String nodeNameToDelete = txtFather.getText();
        tree.deleteNode(nodeNameToDelete, txtTree);
    }//GEN-LAST:event_btnDeleteTreeActionPerformed

    private void txtOriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOriginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOriginActionPerformed

    private void txtDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDestinationActionPerformed

    private void btnAddVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVertexActionPerformed
       String vertice = txtVertex.getText();

    // Añadir vértice al grafo
    grafo.agregarVertice(vertice);

    // Actualizar la visualización del grafo
    actualizarVisualizacionGrafo();
    }//GEN-LAST:event_btnAddVertexActionPerformed

    private void btnAddEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEdgeActionPerformed
       String origen = txtOrigin.getText();
    String destino = txtDestination.getText();

    // Añadir arista al grafo
    grafo.agregarArista(origen, destino);

    // Actualizar la visualización del grafo
    actualizarVisualizacionGrafo();
    }//GEN-LAST:event_btnAddEdgeActionPerformed

    private void btnBubbleRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBubbleRandomActionPerformed
        txtBubble.setText("");
    stopwatch.reset();
    stopwatch.start();

    // Suponiendo que 'array' es tu arreglo y 'BubbleSort' es tu método de ordenamiento
    bubbleSort(array, txtBubble);
    txtBubble.append("Tiempo de ejecución del método BubbleSort() = " + stopwatch.stop() + " milisegundos.");
    arrayReset(array);
    }//GEN-LAST:event_btnBubbleRandomActionPerformed

    private void btnBinaryTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinaryTreeActionPerformed
         txtBinaryTree.setText("");
    printArray(array, txtBinaryTree);
    BinaryTreeSort binaryTree = new BinaryTreeSort();
    stopwatch.reset();
    stopwatch.start();
    binaryTree.sort(array);
    stopwatch.stop();
    printArray(array, txtBinaryTree);
    txtBinaryTree.append("Tiempo de ejecución del Método Binary Tree Sort = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnBinaryTreeActionPerformed

    private void btnBucketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBucketActionPerformed
         txtBucket.setText("");
    printArray(array, txtBucket);
    BucketSort bucketSort = new BucketSort();
    stopwatch.reset();
    stopwatch.start();
    bucketSort.bucketSort(array,txtBucket);
    stopwatch.stop();
    printArray(array, txtBucket);
    txtBucket.append("Tiempo de ejecución del Método BucketSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnBucketActionPerformed

    private void btnCocktailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCocktailActionPerformed
         txtCocktail.setText("");
    printArray(array, txtCocktail);
    CocktailSort cocktailSort = new CocktailSort();
    stopwatch.reset();
    stopwatch.start();
    cocktailSort.cocktailSort(array);
    stopwatch.stop();
    printArray(array, txtCocktail);
    txtCocktail.append("Tiempo de ejecución del Método CocktailSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnCocktailActionPerformed

    private void btnCombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCombActionPerformed
        txtComb.setText("");
    printArray(array, txtComb);
    CombSort combSort = new CombSort();
    stopwatch.reset();
    stopwatch.start();
    combSort.sort(array);
    stopwatch.stop();
    printArray(array, txtComb);
    txtComb.append("Tiempo de ejecución del Método CombSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnCombActionPerformed

    private void btnCountingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCountingActionPerformed
        txtCounting.setText("");
    printArray(array, txtCounting);
    CountingSort countingSort = new CountingSort();
    stopwatch.reset();
    stopwatch.start();
    countingSort.sort(array);
    stopwatch.stop();
    printArray(array, txtCounting);
    txtCounting.append("Tiempo de ejecución del Método CountingSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnCountingActionPerformed

    private void btnGnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGnomeActionPerformed
        txtGnome.setText("");
    printArray(array, txtGnome);
    GnomeSort gnomeSort = new GnomeSort();
    stopwatch.reset();
    stopwatch.start();
    gnomeSort.sort(array);
    stopwatch.stop();
    printArray(array, txtGnome);
    txtGnome.append("Tiempo de ejecución del Método GnomeSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnGnomeActionPerformed

    private void btnHeapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHeapActionPerformed
        txtHeap.setText("");
    printArray(array, txtHeap);
    HeapSort heapSort = new HeapSort();
    stopwatch.reset();
    stopwatch.start();
    heapSort.sort(array);
    stopwatch.stop();
    printArray(array, txtHeap);
    txtHeap.append("Tiempo de ejecución del Método HeapSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnHeapActionPerformed

    private void btnInsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertionActionPerformed
          txtMerge.setText("");
    printArray(array, txtInsertion);
    InsertionSort insertionSort = new InsertionSort();
    stopwatch.reset();
    stopwatch.start();
    insertionSort.insertionSortAlgorithm(array);
    stopwatch.stop();
    printArray(array, txtInsertion);
    txtInsertion.append("Tiempo de ejecución del Método InsertionSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnInsertionActionPerformed

    private void btnMergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergeActionPerformed
       
  
    txtMerge.setText("");
    printArray(array, txtMerge);
    MergeSort mergeSort = new MergeSort();
    stopwatch.reset();
    stopwatch.start();
    mergeSort.mergeSort(array);
    stopwatch.stop();
    printArray(array, txtMerge);
    txtMerge.append("Tiempo de ejecución del Método MergeSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnMergeActionPerformed

    private void btnPigeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPigeonActionPerformed
        txtPigeon.setText("");
    printArray(array, txtPigeon);
    PigeonHole pigeonHoleSort = new PigeonHole();
    stopwatch.reset();
    stopwatch.start();
    pigeonHoleSort.pigeonholeSort(array);
    stopwatch.stop();
    printArray(array, txtPigeon);
    txtPigeon.append("Tiempo de ejecución del Método PigeonHoleSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnPigeonActionPerformed

    private void btnQuickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuickActionPerformed
        txtQuick.setText("");
    printArray(array, txtQuick);
    QuickSort quickSort = new QuickSort();
    stopwatch.reset();
    stopwatch.start();
    quickSort.quickSort(array,0,4, txtQuick);
    stopwatch.stop();
    printArray(array, txtQuick);
    txtQuick.append("Tiempo de ejecución del QuickSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnQuickActionPerformed

    private void btnRadixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRadixActionPerformed
        txtRadix.setText("");
    printArray(array, txtRadix);
    RadixSort radixSort = new RadixSort();
    stopwatch.reset();
    stopwatch.start();
    radixSort.sort(array);
    stopwatch.stop();
    printArray(array, txtRadix);
    txtRadix.append("Tiempo de ejecución del RadixSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnRadixActionPerformed

    private void btnSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectionActionPerformed
         txtSelection.setText("");
    printArray(array, txtSelection);
    SelectionSort selectionSort = new SelectionSort();
    stopwatch.reset();
    stopwatch.start();
    selectionSort.sort(array);
    stopwatch.stop();
    printArray(array, txtSelection);
    txtSelection.append("Tiempo de ejecución del SelectionSort() = " + stopwatch.stop()+ " milisegundos");
    arrayReset(array);
    }//GEN-LAST:event_btnSelectionActionPerformed

    private void btnShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShellActionPerformed
        txtShell.setText("");
ShellSort shellSort = new ShellSort();
stopwatch.reset();
txtShell.append("Arreglo inicial: ");
printArray(array, txtShell);
stopwatch.start();
shellSort.shellSort(array, txtShell);
stopwatch.stop();
txtShell.append("\nArreglo ordenado: ");
printArray(array, txtShell);
txtShell.append("Tiempo de ejecucion del metodo ShellSort() = " + stopwatch.stop());
arrayReset(array);
    }//GEN-LAST:event_btnShellActionPerformed

    private void btnSmoothActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSmoothActionPerformed
        txtSmooth.setText("");
SmoothSort smoothSort = new SmoothSort();
stopwatch.reset();
txtSmooth.append("Arreglo inicial: ");
printArray(array, txtSmooth);
stopwatch.start();
smoothSort.sort(array);
stopwatch.stop();
txtSmooth.append("Arreglo ordenado: ");
printArray(array, txtSmooth);
txtSmooth.append("Tiempo de ejecucion del metodo SmoothSort() = " + stopwatch.stop());
arrayReset(array);
    }//GEN-LAST:event_btnSmoothActionPerformed

    private int[] arrayReset(int[] arr)
{
    arr[0] = 9;
    arr[1] = 1;
    arr[2] = 8;
    arr[3] = 2;
    arr[4] = 7;
    return arr;
}
    
    public static void bubbleSort(int[] array, JTextArea txtArea) {
    txtArea.setText("");
    txtArea.append("Arreglo inicial: ");
    printArray(array, txtArea);

    for (int i = 0; i < array.length - 1; i++) {
        for (int j = 0; j < array.length - i - 1; j++) {
            // Comparar los elementos adyacentes e intercambiar si el elemento actual es mayor que el siguiente
            if (array[j] > array[j + 1]) {
                // Intercambiar elementos
                int temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;

                // Mostrar el estado actual del arreglo
                txtArea.append("Intercambio - " + Arrays.toString(array) + "\n");
            }
        }
    }
    txtArea.append("Arreglo ordenado: ");
    printArray(array, txtArea);
}

public static void printArray(int[] array, JTextArea txtArea) {
    txtArea.append(Arrays.toString(array) + "\n");
}
    
    public void actualizarVisualizacionGrafo() {
        // Crear una imagen para visualizar el grafo
        BufferedImage imagenGrafo = new BufferedImage(pictureBox1.getWidth(), pictureBox1.getHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = imagenGrafo.createGraphics();
        // Dibujar los vértices
        for (Vertex vertice : grafo.vertices) {
            g.setColor(Color.BLUE);
            g.fillOval(vertice.getValor().x, vertice.getValor().y, 30, 30);
            g.setColor(Color.WHITE);
            g.drawString(vertice.getNombre(), vertice.getValor().x + 8, vertice.getValor().y + 8);
        }

        // Dibujar las aristas
        for (Edge arista : grafo.aristas) {
            g.setColor(Color.BLACK);
            g.drawLine(arista.getOrigen().getValor().x + 15, arista.getOrigen().getValor().y + 15,
                    arista.getDestino().getValor().x + 15, arista.getDestino().getValor().y + 15);
        }

        // Mostrar la imagen del grafo en el JPanel
        pictureBox1.getGraphics().drawImage(imagenGrafo, 0, 0, null);
    }
    
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProyectoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProyectoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProyectoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProyectoFinal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InputTextBox;
    private javax.swing.JButton PeekButton;
    private javax.swing.JButton PopButton;
    private javax.swing.JButton PushButton;
    private javax.swing.JTextArea TextAreaDeque;
    private javax.swing.JTextArea TextAreaPriorQueue;
    private javax.swing.JTextArea TextAreaQueue;
    private javax.swing.JButton btnAddEdge;
    private javax.swing.JButton btnAddTree;
    private javax.swing.JButton btnAddVertex;
    private javax.swing.JButton btnBinaryTree;
    private javax.swing.JButton btnBubbleRandom;
    private javax.swing.JButton btnBucket;
    private javax.swing.JButton btnCocktail;
    private javax.swing.JButton btnComb;
    private javax.swing.JButton btnCounting;
    private javax.swing.JButton btnDeleteTree;
    private javax.swing.JButton btnDequeue;
    private javax.swing.JButton btnDequeueFirst;
    private javax.swing.JButton btnDequeueLast;
    private javax.swing.JButton btnDequeuePiror;
    private javax.swing.JButton btnEnqueue;
    private javax.swing.JButton btnEnqueueFirst;
    private javax.swing.JButton btnEnqueueLast;
    private javax.swing.JButton btnEnqueuePrior;
    private javax.swing.JButton btnGnome;
    private javax.swing.JButton btnHeap;
    private javax.swing.JButton btnInsertion;
    private javax.swing.JButton btnMerge;
    private javax.swing.JButton btnPigeon;
    private javax.swing.JButton btnQuick;
    private javax.swing.JButton btnRadix;
    private javax.swing.JButton btnSelection;
    private javax.swing.JButton btnShell;
    private javax.swing.JButton btnSimpleList;
    private javax.swing.JButton btnSmooth;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JPanel pictureBox1;
    private javax.swing.JTextArea textArea2;
    private javax.swing.JTextArea textAreaStack;
    private javax.swing.JTextField textField1;
    private javax.swing.JTextArea txtBinaryTree;
    private javax.swing.JTextArea txtBubble;
    private javax.swing.JTextArea txtBucket;
    private javax.swing.JTextArea txtCocktail;
    private javax.swing.JTextArea txtComb;
    private javax.swing.JTextArea txtCounting;
    private javax.swing.JTextField txtDeque;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtFather;
    private javax.swing.JTextArea txtGnome;
    private javax.swing.JTextArea txtHeap;
    private javax.swing.JTextArea txtInsertion;
    private javax.swing.JTextArea txtMerge;
    private javax.swing.JTextField txtNewNodeTree;
    private javax.swing.JTextField txtOrigin;
    private javax.swing.JTextArea txtPigeon;
    private javax.swing.JTextField txtPriorityQueue;
    private javax.swing.JTextField txtQueue;
    private javax.swing.JTextArea txtQuick;
    private javax.swing.JTextArea txtRadix;
    private javax.swing.JTextArea txtSelection;
    private javax.swing.JTextArea txtShell;
    private javax.swing.JTextArea txtSmooth;
    private javax.swing.JTextArea txtTree;
    private javax.swing.JTextField txtVertex;
    // End of variables declaration//GEN-END:variables
}
